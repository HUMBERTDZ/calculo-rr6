package com.ws_rr7_generico.services.impl;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.Base64;
import java.util.List;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Sort;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.jdbc.support.rowset.SqlRowSet;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.ws_rr7_generico.dao.CadqDAO;
import com.ws_rr7_generico.dao.OinvDAO;
import com.ws_rr7_generico.models.ArchivoRespuesta;
import com.ws_rr7_generico.models.BaseLayoutRr7;
import com.ws_rr7_generico.models.Cadq;
import com.ws_rr7_generico.models.Deud;
import com.ws_rr7_generico.models.Oinv;
import com.ws_rr7_generico.rest.reportesRegulatorios;
import com.ws_rr7_generico.services.OINVService;
import com.ws_rr7_generico.util.Constantes;
import com.ws_rr7_generico.util.ResponseMessage;

@Transactional(rollbackFor = Exception.class)
@Service
public class OINVServiceImpl implements OINVService {
	
	
	Logger logger = LoggerFactory.getLogger(reportesRegulatorios.class);
	
	@Autowired
	private JdbcTemplate jdbcTemplate;
	
	
	@Autowired
	private OinvDAO oinvDAO;
	String nivel1 = "0" ;
	String nivel2 = "0";
	String nivel3 = "0";
	String nivel4 = "0";
	String moneda = "0";
	String consecutivo = "0";
	String afectacion = "0";
	String tipoActivo = "0";
	String valHistInicial = "0";
	String saldoCierre = "0";
	String numeroLicita = "0";
	String fechaAdqui = "0";
	String persJuridica = "0";
	String razonSocial = "0";
	String primerNombre = "0";
	String segundoNombre = "0";
	String apellidoPaterno = "0";
	String apellidoMaterno = "0";
	String fchVnto = "0";
	String d_x_int = "0";
	String plazoInt = "0";
	String tazaInt = "0";
	String tipoDeudor = "0";
	String tipoDxc = "0";
	String impDeuFianzas = "0";
	String tipoDeuXResp = "0";
	String tipoDiv = "0";
	String nivelFondos = "0";
	String cvePonderadorContr = "0";
	String cvePonderadorGar = "0";
	String califontcpt = "0";
	String califongaran = "0";
	String valorConverRiesgo = "0";
	String valorGaranCober = "0";
	String tipoGarantiaCobertura = "0";
	String portaSegFlex = "0";
	String tasaGaranti = "0";
	String cadena = nivel1.concat("|").concat(nivel2).concat("|").concat(nivel3).concat("|").concat(nivel4).concat("|")
			.concat(moneda).concat("|").concat(consecutivo).concat("|").concat(afectacion).concat("|")
			.concat(tipoActivo).concat("|").concat(valHistInicial).concat("|").concat(saldoCierre).concat("|").concat(numeroLicita).concat("|")
			.concat(fechaAdqui).concat("|").concat(persJuridica).concat("|").concat(razonSocial).concat("|").concat(primerNombre).concat("|")
			.concat(segundoNombre).concat("|").concat(apellidoPaterno).concat("|").concat(apellidoMaterno).concat("|").concat(fchVnto).concat("|")
			.concat(d_x_int).concat("|").concat(plazoInt).concat("|").concat(tazaInt).concat("|").concat(tipoDeudor).concat("|")
			.concat(tipoDxc).concat("|").concat(impDeuFianzas).concat("|").concat(tipoDeuXResp).concat("|").concat(tipoDiv).concat("|")
			.concat(nivelFondos).concat("|").concat(cvePonderadorContr).concat("|").concat(cvePonderadorGar).concat("|").concat(califontcpt).concat("|")
			.concat(califongaran).concat("|").concat(valorConverRiesgo).concat("|").concat(valorGaranCober).concat("|").concat(tipoGarantiaCobertura).concat("|")
			.concat(portaSegFlex).concat("|").concat(tasaGaranti).concat("|;");
	
	@Override
	 public ArchivoRespuesta obtenerOINV(String nombre, String anioMes) throws IOException {
		ArchivoRespuesta ar = new ArchivoRespuesta();
		ar.setBaseArchivo(GenerarTxtOinv(nombre, anioMes));
		ar.setNombreArchivo(nombre);
		return ar;
	}
	
	public String GenerarTxtOinv(String nombre, String anioMes) throws IOException {
		String response = "";
//		List<Oinv> ListaOinv = oinvDAO.findAll(Sort.by("nivel1").and(Sort.by("nivel2").and(Sort.by("nivel3").and(Sort.by("nivel4"))
//				.and(Sort.by("moneda")).and(Sort.by("consecutivo")))));
//		
		List<Oinv> ListaOinv = oinvDAO.findByAnioMes(anioMes);
		File archivo = new File("D:\\TempSesa\\" + nombre);

		if (archivo.exists()) {
			archivo.delete();
		}
		archivo.createNewFile();
		FileWriter fw = new FileWriter(archivo, true);
		BufferedWriter bw = new BufferedWriter(fw);
		if (ListaOinv != null && ListaOinv.size() != 0) {
			for (Oinv Lista : ListaOinv) {
				if(Lista != null) {
				nivel1 = Lista.getNivel1().isEmpty() || Lista.getNivel1() == null ? "0" : Lista.getNivel1() ;
				nivel2 = Lista.getNivel2();
				nivel3 = Lista.getNivel3();
				nivel4 = Lista.getNivel4();
				moneda = Lista.getMoneda();
				consecutivo = Lista.getConsecutivo();
				afectacion = Lista.getAfectacion();
				tipoActivo = Lista.getTipoActivo();
				valHistInicial = Lista.getValHistInicial();
				saldoCierre = Lista.getSaldoCierre();
				numeroLicita = Lista.getNumeroLicita();
				fechaAdqui = Lista.getFechaAdqui();
				persJuridica = Lista.getPersonalidadJuridica();
				razonSocial = Lista.getRazonSocial();
				primerNombre = Lista.getPrimerNombre();
				segundoNombre = Lista.getSegundoNombre();
				apellidoPaterno = Lista.getApellidoPaterno();
				apellidoMaterno = Lista.getApellidoMaterno();
				fchVnto = Lista.getFchVnto();
				d_x_int = Lista.getDXInt();
				plazoInt = Lista.getPlazoInt();
				tazaInt = Lista.getTasaInt();
				tipoDeudor = Lista.getTipoDeudor();
				tipoDxc = Lista.getTipoDxc();
				impDeuFianzas = Lista.getImpDeuFianzas();
				tipoDeuXResp = Lista.getTipoDeuXResp();
				tipoDiv = Lista.getTipoDiv();
				nivelFondos = Lista.getNivelFondos();
				cvePonderadorContr = Lista.getCvePonderadorContraparte();
				cvePonderadorGar = Lista.getCvePonderadorGarantia();
				califontcpt = Lista.getCalifoncpt();
				califongaran = Lista.getCalifongaran();
				valorConverRiesgo = Lista.getValorConversionARiesgocpt();
				valorGaranCober = Lista.getValorGaranCober();
				tipoGarantiaCobertura = Lista.getTipoGarantiaCobertura();
				portaSegFlex = Lista.getPortaSegFlex();
				tasaGaranti = Lista.getTasaGaranti();
				
				bw.write(nivel1.concat("|").concat(nivel2).concat("|").concat(nivel3).concat("|").concat(nivel4).concat("|")
						.concat(moneda).concat("|").concat(consecutivo).concat("|").concat(afectacion).concat("|")
						.concat(tipoActivo).concat("|").concat(valHistInicial).concat("|").concat(saldoCierre).concat("|").concat(numeroLicita).concat("|")
						.concat(fechaAdqui).concat("|").concat(persJuridica).concat("|").concat(razonSocial).concat("|").concat(primerNombre).concat("|")
						.concat(segundoNombre).concat("|").concat(apellidoPaterno).concat("|").concat(apellidoMaterno).concat("|").concat(fchVnto).concat("|")
						.concat(d_x_int).concat("|").concat(plazoInt).concat("|").concat(tazaInt).concat("|").concat(tipoDeudor).concat("|")
						.concat(tipoDxc).concat("|").concat(impDeuFianzas).concat("|").concat(tipoDeuXResp).concat("|").concat(tipoDiv).concat("|")
						.concat(nivelFondos).concat("|").concat(cvePonderadorContr).concat("|").concat(cvePonderadorGar).concat("|").concat(califontcpt).concat("|")
						.concat(califongaran).concat("|").concat(valorConverRiesgo).concat("|").concat(valorGaranCober).concat("|").concat(tipoGarantiaCobertura).concat("|")
						.concat(portaSegFlex).concat("|").concat(tasaGaranti).concat("|;"));			
				
				bw.newLine();
				}
			}
			System.out.println("lleno");
		} else {
			bw.write(cadena);
			bw.newLine();
			System.out.println("nulo o vacio");
		}
		bw.close();
		fw.close();
		System.out.println("Archivo OINV creado correctamente");
		byte[] input_file;
		byte[] encodedBytes;
		input_file = Files.readAllBytes(Paths.get(archivo.getAbsolutePath()));
		encodedBytes = Base64.getEncoder().encode(input_file);
		response = new String(encodedBytes);
		return response;
	}
	@Override
	public String saveList(List<Oinv> lista) {
		oinvDAO.saveAll(lista);
		return "ok";
	}
	@Override
	public ResponseMessage updateOinv(List<BaseLayoutRr7> getBaseLayoutRr7) {
		ResponseMessage respuesta = null;		
//		List<Deud> getDeud = deudDAO.findAll();
//		BaseLayoutRr7 baseLayoutRr7Result ;
//		for (Deud deud: getDeud) {
//
//			baseLayoutRr7Result = getBaseLayoutRr7
//	                .stream().filter(producer -> producer.getCtaQtoNivNvoCat().concat(""+producer.getTipoMoneda()).
//	                		equals(deud.getNivel1()+deud.getNivel2()+deud.getNivel3()+deud.getNivel4()+deud.getMoneda())).findFirst().orElse(null);
//			if (baseLayoutRr7Result != null) {
//				deud.setRecargos((int)baseLayoutRr7Result.getMontMonConsolidada());
//			}else {
//				deud.setRecargos(0);
//			}			
//		}
//		if (deudDAO.saveAll(getDeud) != null) {
//			respuesta = new ResponseMessage(Constantes.RESPONSEMESSAGE_OK, "Archivo Deud actualizado ", null);
//		}		
		return respuesta;
	}

	@Override
	public boolean getExistRecords(String anioMes) {

		boolean existenRegistros = false;
		

		String query = "SELECT IIF (COUNT(*) >= 1, 1, 0) AS EXISTEN_REGISTROS FROM OINV WHERE ANIOMES = '" + anioMes + "';";

		logger.info(query);
		SqlRowSet rowSet = jdbcTemplate.queryForRowSet(query);

		while(rowSet.next()){
			existenRegistros =   rowSet.getInt("EXISTEN_REGISTROS") == 1 ? true : false ;
		}
		logger.info("existenRegistros " + existenRegistros);
		return existenRegistros;
	}

}
