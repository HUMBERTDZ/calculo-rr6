package com.ws_rr7_generico.services.impl;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.Base64;
import java.util.Iterator;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Sort;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.ws_rr7_generico.dao.BaseLayoutRr7DAO;
import com.ws_rr7_generico.dao.OactDAO;
import com.ws_rr7_generico.models.ArchivoRespuesta;
import com.ws_rr7_generico.models.BaseLayoutRr7;
import com.ws_rr7_generico.models.Oact;
import com.ws_rr7_generico.services.OACTService;
import com.ws_rr7_generico.util.Constantes;
import com.ws_rr7_generico.util.ResponseMessage;

@Transactional(rollbackFor = Exception.class)
@Service
public class OACTServiceImpl implements OACTService {

	@Autowired
	private OactDAO oactDao;

	@Autowired
	private BaseLayoutRr7DAO baseLayoutRr7DAO;
	
	String nivel1 = "0",nivel2 = "0",nivel3 = "0",nivel4 = "0",moneda = "0",cveOtrosActivos = "0",
			subCveOtrosActivos = "0",afectacion = "0",niv_fon_prop = "0",valores = "0";
	
	String cadena = nivel1.concat("|").concat(nivel2).concat("|").concat(nivel3).concat("|").concat(nivel4).concat("|")
			.concat(moneda).concat("|").concat(cveOtrosActivos).concat("|").concat(subCveOtrosActivos).concat("|").concat(afectacion)
			.concat("|").concat(niv_fon_prop).concat("|").concat(valores).concat("|;");
			
	@Override
	public ArchivoRespuesta obtenerOACT(String nombre) throws IOException {	
		ArchivoRespuesta ar = new ArchivoRespuesta();
		
		ar.setBaseArchivo(GenerarTxtOact(nombre));
		
		ar.setNombreArchivo(nombre);
		return ar;
	}
	
	public String GenerarTxtOact(String nombre) throws IOException {

		String response = "";
		List<Oact> ListaOACT = oactDao.findAll(Sort.by("nivel1").and(Sort.by("nivel2").and(Sort.by("nivel3").and(Sort.by("nivel4").and(Sort.by("moneda").and(Sort.by("cveOtrosActivos")))))));

		File archivo = new File("D:\\TempSesa\\" + nombre);

		if (archivo.exists()) {
			archivo.delete();
		}
		archivo.createNewFile();
		FileWriter fw = new FileWriter(archivo, true);
		BufferedWriter bw = new BufferedWriter(fw);
		if (ListaOACT != null && ListaOACT.size() != 0) {
			for (Oact Lista : ListaOACT) {

				nivel1 = Lista.getNivel1();
				nivel2 = Lista.getNivel2();
				nivel3 = Lista.getNivel3();
				nivel4 = Lista.getNivel4();
				moneda = Lista.getMoneda();
				cveOtrosActivos = Lista.getCveOtrosActivos();
				subCveOtrosActivos = Lista.getSub_Cve_Otros_Activos();
				afectacion = Lista.getAfectacion();
				niv_fon_prop = Lista.getNivFondProp();
				valores = Lista.getValores();
				
				bw.write(nivel1.concat("|").concat(nivel2).concat("|").concat(nivel3).concat("|").concat(nivel4).concat("|")
						.concat(moneda).concat("|").concat(cveOtrosActivos).concat("|").concat(subCveOtrosActivos).concat("|").concat(afectacion)
						.concat("|").concat(niv_fon_prop).concat("|").concat(valores).concat("|;"));
				bw.newLine();
			}
			System.out.println("archivo OACT lleno");
		} else {
			bw.write(cadena);
			bw.newLine();
			System.out.println("nulo o vacio");
		}
		bw.close();
		fw.close();
		System.out.println("Archivo OACT creado correctamente");
		byte[] input_file;
		byte[] encodedBytes;
		input_file = Files.readAllBytes(Paths.get(archivo.getAbsolutePath()));
		encodedBytes = Base64.getEncoder().encode(input_file);
		response = new String(encodedBytes);
		return response;
	}

	@Override
	public ResponseMessage updateOact(List<BaseLayoutRr7> getBaseLayoutRr7) {
		ResponseMessage respuesta = null;
		
		List<Oact> getOact = oactDao.findAll();
		BaseLayoutRr7 baseLayoutRr7Result ;
		for (Oact oact : getOact) {

			baseLayoutRr7Result = getBaseLayoutRr7
	                .stream().filter(producer -> (producer.getCtaQtoNivNvoCat()+""+producer.getTipoMoneda()+producer.getSubCtaCatAnt()).
	                		equals(oact.getNivel1()+oact.getNivel2()+oact.getNivel3()+oact.getNivel4()+oact.getMoneda()+oact.getSub_Cve_Otros_Activos())).findFirst().orElse(null);
			if (baseLayoutRr7Result != null) {
				oact.setValores(""+baseLayoutRr7Result.getMontMonConsolidada());
			}else {
				oact.setValores("0");
			}			
		}
		if (oactDao.saveAll(getOact) != null) {
			respuesta = new ResponseMessage(Constantes.RESPONSEMESSAGE_OK, "Archivo Oact actualizado ", 1);
		}
		return respuesta;
	}
}
