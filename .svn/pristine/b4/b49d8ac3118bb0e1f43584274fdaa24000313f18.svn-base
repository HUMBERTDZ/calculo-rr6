package com.ws_rr7_generico.services.impl;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.Base64;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.ws_rr7_generico.dao.RifiDAO;
import com.ws_rr7_generico.models.ArchivoRespuesta;
import com.ws_rr7_generico.models.BaseLayoutRr7;
import com.ws_rr7_generico.models.Cope;
import com.ws_rr7_generico.models.Rifi;
import com.ws_rr7_generico.services.RIFIService;
import com.ws_rr7_generico.util.Constantes;
import com.ws_rr7_generico.util.ResponseMessage;

@Transactional(rollbackFor = Exception.class)
@Service
public class RIFIServiceImpl implements RIFIService {
	@Autowired
	private RifiDAO rifiDAO;
	
	String nivel1 = "0",nivel2 = "0",nivel3 = "0",nivel4 = "0",claveRif = "0",subClaveRif = "0",
		   operacion  = "0",cveRamo  = "0",cveSubRamo  = "0",cveSubSubRamo  = "0";
	int moneda = 0;
	double saldo = 0;

	String cadena =	nivel1.concat("|").concat(nivel2).concat("|").concat(nivel3).concat("|").concat(nivel4).concat("|")
			.concat(String.valueOf(moneda)).concat("|").concat(claveRif).concat("|").concat(subClaveRif).concat("|")
			.concat(operacion).concat("|").concat(cveRamo).concat("|").concat(cveSubRamo).concat("|").concat(cveSubSubRamo).concat("|")
			.concat(String.valueOf(saldo).concat("|;"));

	@Override
	 public ArchivoRespuesta obtenerRIFI(String nombre) throws IOException {
		ArchivoRespuesta ar = new ArchivoRespuesta();
		ar.setBaseArchivo(GenerarTxtRifi(nombre));
		ar.setNombreArchivo(nombre);
		return ar;
	}
	
	public String GenerarTxtRifi(String nombre) throws IOException {
		String response = "";
		List<Rifi> ListaRifi = rifiDAO.findAll();

		File archivo = new File("D:\\TempSesa\\" + nombre);

		if (archivo.exists()) {
			archivo.delete();
		}
		archivo.createNewFile();
		FileWriter fw = new FileWriter(archivo, true);
		BufferedWriter bw = new BufferedWriter(fw);
		if (ListaRifi != null && ListaRifi.size() != 0) {
			for (Rifi Lista : ListaRifi) {

				nivel1 = Lista.getNivel1().isEmpty() || Lista.getNivel1() == null ? "0" : Lista.getNivel1() ;
				nivel2 = Lista.getNivel2();
				nivel3 = Lista.getNivel3();
				nivel4 = Lista.getNivel4();
				moneda = Lista.getMoneda();
				claveRif = Lista.getClaveRif();
				subClaveRif = Lista.getSubClaveRif();
				operacion  = Lista.getOperacion();
				cveRamo  = Lista.getCveRamo();
				cveSubRamo  = Lista.getCveSubram();
				cveSubSubRamo  = Lista.getCveSubsubram();
				saldo = Lista.getSaldo();							
				bw.write(nivel1.concat("|").concat(nivel2).concat("|").concat(nivel3).concat("|").concat(nivel4).concat("|")
						.concat(String.valueOf(moneda)).concat("|").concat(claveRif).concat("|").concat(subClaveRif).concat("|")
						.concat(operacion).concat("|").concat(cveRamo).concat("|").concat(cveSubRamo).concat("|").concat(cveSubSubRamo).concat("|")
						.concat(String.valueOf(saldo).concat("|;")));
				bw.newLine();
			}
			System.out.println("lleno");
		} else {
			bw.write(cadena);
			bw.newLine();
			System.out.println("nulo o vacio");
		}
		bw.close();
		fw.close();
		System.out.println("Archivo RIFI creado correctamente");
		byte[] input_file;
		byte[] encodedBytes;
		input_file = Files.readAllBytes(Paths.get(archivo.getAbsolutePath()));
		encodedBytes = Base64.getEncoder().encode(input_file);
		response = new String(encodedBytes);
		return response;
	}

	@Override
	public ResponseMessage updateRifi(List<BaseLayoutRr7> getBaseLayoutRr7) {
		ResponseMessage respuesta = null;		
		List<Rifi> getRifi = rifiDAO.findAll();
		BaseLayoutRr7 baseLayoutRr7Result ;
		for (Rifi rifi: getRifi) {

			baseLayoutRr7Result = getBaseLayoutRr7
	                .stream().filter(producer -> (producer.getCtaQtoNivNvoCat()+producer.getTipoMoneda()+producer.getRamo()+producer.getSubramo()+producer.getSubsubramo()+producer.getSubCtaCatAnt()).
	                		equals(rifi.getNivel1()+rifi.getNivel2()+rifi.getNivel3()+rifi.getNivel4()+rifi.getMoneda()
	                		+rifi.getCveRamo()+rifi.getCveSubram()+rifi.getCveSubsubram()+rifi.getSubClaveRif())).findFirst().orElse(null);
			if (baseLayoutRr7Result != null) {
				rifi.setSaldo((int)baseLayoutRr7Result.getMontMonConsolidada());
			}else {
				rifi.setSaldo(0);
			}			
		}
		if (rifiDAO.saveAll(getRifi) != null) {
			respuesta = new ResponseMessage(Constantes.RESPONSEMESSAGE_OK, "Archivo Rifi actualizado ", 1);
		}		
		return respuesta;
	}

}
